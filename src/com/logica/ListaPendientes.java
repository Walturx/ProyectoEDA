package com.logica;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//Hecho por Walter Sebastian Melendez Julca-20231805

public class ListaPendientes extends javax.swing.JFrame {
    
private Mesa_Partes mesa;
private RegistroInteresado registroPersona;
private ArbolExpedientes arbol;
private ListaTerminados terminadosUI;

//Constructor que inicializa la interfaz 
public ListaPendientes(RegistroInteresado registroPersona, ArbolExpedientes arbol, ListaTerminados terminadosUI) {
    
    initComponents(); // Carga todos los elementos de la interfaz
    this.registroPersona = registroPersona;
    this.mesa = registroPersona.getMesa(); // Obtiene la instancia actual de Mesa_Partes
    this.arbol = arbol; // Árbol donde se almacenarán los expedientes terminados
    this.terminadosUI = terminadosUI; // Referencia a la ventana de terminados para poder actualizarla
    cargarTabla(); // Carga los nombres de las personas en las etapas actu
}




    // Atributos
   
// Método para llenar la tabla con los nombres de los interesados según su etapa

private void cargarTabla() {
    DefaultTableModel modelo = (DefaultTableModel) tablaListaPendientes.getModel();
    modelo.setRowCount(0); // limpiar
    // Obtiene los nombres desde cada etapa
    String[] col1 = mesa.listarNombres();
    String[] col2 = mesa.oficina.listarNombres();
    String[] col3 = mesa.decanato.listarNombres();
    String[] col4 = mesa.junta.listarNombres();
    // Determina la cantidad máxima de filas necesarias

    int max = Math.max(Math.max(col1.length, col2.length), Math.max(col3.length, col4.length));
    // Crea filas para cada posición y las agrega a la tabla

    for (int i = 0; i < max; i++) {
        String[] fila = new String[4];
        fila[0] = i < col1.length ? col1[i] : "";
        fila[1] = i < col2.length ? col2[i] : "";
        fila[2] = i < col3.length ? col3[i] : "";
        fila[3] = i < col4.length ? col4[i] : "";
        modelo.addRow(fila);
    }
}
// Método  para mover una persona seleccionada de su etapa actual a la siguiente

private void moverEtapaSeleccionado() {
    int fila = tablaListaPendientes.getSelectedRow();
    if (fila == -1) {
        JOptionPane.showMessageDialog(this, "Selecciona una fila.");
        return;
    }
    // Recorre las columnas para encontrar la etapa donde hay un nombre

    for (int col = 0; col < 4; col++) {
        String nombre = (String) tablaListaPendientes.getValueAt(fila, col);
        if (nombre != null && !nombre.isEmpty()) {
            if (col == 0) {
                Nodo n = mesa.mover_mesa(); // saca de mesa
                mesa.oficina.añadir_oficina(n); // mete en oficina
            } else if (col == 1) {
                Nodo n = mesa.oficina.mover_oficina(); // saca de oficina
                mesa.decanato.añadir_decano(n); // mete en decanato
            } else if (col == 2) {
                Nodo n = mesa.decanato.mover_decano();
                mesa.junta.añadir_junta(n);
            } else if (col == 3) {
                Expediente e = mesa.junta.completar(); // fin del trámite
                JOptionPane.showMessageDialog(this, "Trámite finalizado para: " + e.Interesado.Nombres);
            }
            break;
        }
    }

    cargarTabla();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaListaPendientes = new javax.swing.JTable();
        btnCerrar = new javax.swing.JButton();
        moverMesa = new javax.swing.JButton();
        moverOficina = new javax.swing.JButton();
        moverDecanato = new javax.swing.JButton();
        Completar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista de Personas");

        jLabel1.setText("Lista de pendientes");

        tablaListaPendientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mesa de Partes", "Oficina Administrativa", "Decanato", "Junta universitaria"
            }
        ));
        jScrollPane1.setViewportView(tablaListaPendientes);

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        moverMesa.setText("Mover");
        moverMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moverMesaActionPerformed(evt);
            }
        });

        moverOficina.setText("Mover");
        moverOficina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moverOficinaActionPerformed(evt);
            }
        });

        moverDecanato.setText("Mover");
        moverDecanato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moverDecanatoActionPerformed(evt);
            }
        });

        Completar.setText("Completar");
        Completar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(moverMesa)
                .addGap(67, 67, 67)
                .addComponent(moverOficina)
                .addGap(82, 82, 82)
                .addComponent(moverDecanato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Completar)
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moverOficina)
                    .addComponent(moverMesa)
                    .addComponent(moverDecanato)
                    .addComponent(Completar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(btnCerrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void CompletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompletarActionPerformed
        // TODO add your handling code here:
        
   if (mesa.junta.cuenta > 0) {
        Expediente e = mesa.junta.completar();     // quitar de Junta

        // Insertar en árbol por DNI
        arbol.insertarExpediente(e);

        // Añade el expediente en la ventana de terminados
        Nodo nodo = new Nodo(e); // si .completar() ya devuelve un Nodo, no necesitas esto
        terminadosUI.agregarExpediente(nodo);
        
        JOptionPane.showMessageDialog(this, "Trámite finalizado para: " + e.Interesado.Nombres);
    } else {
        JOptionPane.showMessageDialog(this, "No hay expedientes en Junta Universitaria.");
    }

    cargarTabla(); //actualiza la tabla
    }//GEN-LAST:event_CompletarActionPerformed

    private void moverMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moverMesaActionPerformed
        // TODO add your handling code here:
       if (mesa.cuenta > 0) {
        Nodo n = mesa.mover_mesa();                // quitar de Mesa de Partes
        mesa.oficina.añadir_oficina(n);            // agregar a Oficina
        JOptionPane.showMessageDialog(this, "Movido de Mesa de Partes a Oficina Administrativa.");
    } else {
        JOptionPane.showMessageDialog(this, "No hay expedientes en Mesa de Partes.");
    }
    cargarTabla();
    }//GEN-LAST:event_moverMesaActionPerformed

    private void moverOficinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moverOficinaActionPerformed
        // TODO add your handling code here:
                 if (mesa.oficina.cuenta > 0) {
        Nodo n = mesa.oficina.mover_oficina();      // quitar de Oficina
        mesa.decanato.añadir_decano(n);             // agregar a Decanato
        JOptionPane.showMessageDialog(this, "Movido de Oficina Administrativa a Decanato.");
    } else {
        JOptionPane.showMessageDialog(this, "No hay expedientes en Oficina Administrativa.");
    }
    cargarTabla();

    }//GEN-LAST:event_moverOficinaActionPerformed

    private void moverDecanatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moverDecanatoActionPerformed
        // TODO add your handling code here:
             if (mesa.decanato.cuenta > 0) {
        Nodo n = mesa.decanato.mover_decano();     // quitar de Decanato
        mesa.junta.añadir_junta(n);                // agregar a Junta
        JOptionPane.showMessageDialog(this, "Movido de Decanato a Junta Universitaria.");
    } else {
        JOptionPane.showMessageDialog(this, "No hay expedientes en Decanato.");
    }
    cargarTabla();

    }//GEN-LAST:event_moverDecanatoActionPerformed

    /**
     * @param args the command line arguments
     */
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Completar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton moverDecanato;
    private javax.swing.JButton moverMesa;
    private javax.swing.JButton moverOficina;
    private javax.swing.JTable tablaListaPendientes;
    // End of variables declaration//GEN-END:variables
}
